export default {
  m: {
    Frame: {
      home: 'Home',
      depositwithdraw: 'Charge to mention',
      author: 'Author',
      node: 'Node',
      carrier: 'Carrier',
      analy: 'Statistical',
      asset: 'Asset',
      admin: 'Admin',
      setting: 'Setting',
      website: 'Website',
      bitType: 'Token',
      KY: 'Available',
      unused: 'Locked',
      loading: 'Loading...',
      loginTitle: 'Log in',
      userplaceholder: 'Account',
      Passplaceholder: 'Password',
      rePassplaceholder: 'Re-enter the password',
      registerAccount: 'Create account',
      login: 'Log in',
      quit: 'Log out',
      notSupport: 'Unsupported browser',
      note: 'The browser (version) you are using has not been fully tested. We strongly recommend you to use Google Chrome to continue. After the fully testing in future, you may use this browser safely. Please make sure you know about the risk.',
      understand: 'I understand.',
      trNotify: 'tr notify',
      trNotify1: 'tranfer notify!',
      lendingnotify: 'invest notify',
      lendingnotify1: 'invest notify!',
      initErr: 'Initialization failed',
      errInfo: ' All network node connections failed. Please check your network node or refresh later.',
      iUnderstand: 'I understand',
      friendLink: 'Friend Link',
      tologinTitle: 'If you already have the ZOS account, please click here.'
    },
    register: {
      title: 'Sign up',
      errorInfo1: 'Verification code error',
      accountName: 'Account name',
      specifyAccountName: 'The premium account name consists of 1-2 letters only, or 3-8 letters containing at least one of a, e, i, o, u, y',
      specifyAccount: 'Please appoint an existing account to pay for your premium account',
      vaCode: 'Captcha',
      change: 'Click to change',
      changeOne: 'Refresh',
      gPassword: 'Generated password',
      browserPass: 'The password was generated by your local browser.',
      owner: 'No one but you has access to the passward.',
      paste: 'Paste it below and save it carefully in a safe place.',
      conPass: 'Confirm',
      paidAccount: 'Premium Account',
      payAmount: 'Amount',
      noRecover: 'I understand that no one can recover my password if I lose or forget it.',
      safekeeping: 'I have written down or stored my account name and password.',
      isRead: 'I have read and agreed to',
      policyTitle: 'Privacy Policy',
      policy: 'The website will be strictly compliant with related laws and contents listed in the privacy policy to collect and use your information.',
      agreement: 'Privacy',
      terms: 'Terms',
      success: 'Congratulations，you have signed up successfully! Now, you can log in with your account.',
      proposalSuccess: 'Application for premium account approved! Please wait for the payment account to pay',
      unNull: 'Password cannot be empty!',
      correctCode: 'Please enter the correct captcha code!',
      characters: 'Account name must be 9-63 characters long!',
      letterBegin: 'Account name must begin with a letter!',
      combination: 'Account name must be a combination of alphabets, numbers and dashes!',
      notEnd: 'Account name can not end with - ',
      noSame: 'Password and confirmed password do not match!',
      notCheck: 'You have not accepted our relevant policies for registration!',
      notSupport: 'Pure-letter password is not supported!',
      exists: ' The account name for the payment does not exist.',
      regFail: 'Registration failed',
      regSuc: 'Congratulations，you have registered successfully!',
      loginSuc: 'You have logged in!',
      nameNull: 'Account name and password can not be empty!',
      nameErr: 'Account name or password is incorrect!',
      name_input: {
        advanced_name: '3-8 digits containing aeiouy pure letter account are nicknames. You need to specify an existing account to pay for the premium account name.',
        contain: 'not contain with zos letters.',
        empty: 'not be empty.',
        end: 'end with a letter or digit.',
        inValid: 'Please enter valid account name',
        longer: 'be longer than 8.',
        begin: 'first char must be Char',
        rule: 'only input char, number or -',
        name_is_taken: 'Account name is already taken.',
        name_not_payfor_premium: 'Account name can not pay for premium_name.',
        not_found: 'Account not found.',
        oneDash: 'have only one dash in a row.',
        only: 'have only letters, digits, or dashes.',
        premium_name_faucet: 'This is a premium name which is not supported by this faucet. Please enter a regular name containing least one dash, a number or no vowels.',
        premium_name_warning: 'This is a premium name which is more expensive than a name containing a dash (-) or a number.',
        segment: 'Each account segment should',
        shorter: 'be shorter.',
        start: 'start with a letter.',
        suffix: 'Account name should ',
        password: 'Pass Word',
        rule1: 'include digit',
        rule2: 'include low letter',
        rule3: 'include upper letter',
        less: 'be longer than 40.'
      }
    },
    country: {
      AR: 'Argentina',
      AT: 'Austria',
      AU: 'Australia',
      BE: 'Belgium',
      BR: 'Brazil',
      BY: 'Belarus',
      CA: 'Canada',
      CH: 'Switzerland',
      CL: 'Chile',
      CN: 'China',
      CO: 'Colombia',
      DE: 'Germany',
      DK: 'Denmark',
      ES: 'Spain',
      FI: 'Finland',
      FR: 'France',
      GB: 'United Kingdom',
      GR: 'Greece',
      HK: 'Hong Kong SAR China',
      ID: 'Indonesia',
      IN: 'India',
      IS: 'Iceland',
      IT: 'Italy',
      JP: 'Japan',
      KH: 'Cambodia',
      KR: 'South Korea',
      LA: 'Laos',
      MM: 'Myanmar (Burma)',
      MN: 'Mongolia',
      MO: 'Macau SAR China',
      MV: 'Maldives',
      MX: 'Mexico',
      MY: 'Malaysia',
      NL: 'Netherlands',
      NO: 'Norway',
      NZ: 'New Zealand',
      PH: 'Philippines',
      PL: 'Poland',
      PT: 'Portugal',
      RU: 'Russia',
      SE: 'Sweden',
      SG: 'Singapore',
      TH: 'Thailand',
      TR: 'Turkey',
      TW: 'Taiwan China',
      US: 'United States',
      VN: 'Vietnam',
      ZA: 'South Africa'
    },
    Home: {},
    Depositwithdraw: {
      deposite: 'Charge currency',
      withdraw: 'Mention currency',
      deposite_cash: 'Recharge',
      withdraw_cash: 'Withdrawal',
      gateway_setting: 'Gateway set',
      gateway_statistics: 'Gateway statistics'
    },
    Author: {
      kyclist: 'KYC',
      kyc_setting: 'KYC setting',
      kyc_statistics: 'KYC statistics',
      dig_account: 'Digital account',
      name: 'Name',
      help_text0: 'Enter Digital account',
      help_text1: 'Enter Name',
      help_text2: 'Select audit status',
      help_text3: 'Select nationality',
      zos_account: 'ZosWorld Account',
      nationality: 'Nationality',
      ID_Type: {
        title: 'ID Type',
        1: 'ID Card',
        2: 'Passport'
      },
      ID_Num: 'ID No.',
      status: {
        title: 'Review status',
        0: 'Not audit',
        1: 'Approved',
        2: 'Not approved',
        3: 'Reviewing'
      },
      submission_time: 'Submission time',
      audit_time: 'Audit time',
      auditor: 'Auditor',
      operation: 'Operation',
      audit: 'Audit',
      check_details: 'Details',
      total: 'Aotal',
      article: 'articles',
      page: 'page',
      go_to: 'Go to',
      refuse: 'Refuse',
      pass: 'Pass',
      cancelPass: 'Cancelled by',
      kyc_info: 'KYC Information',
      birthday: 'Birthday',
      country: 'Country',
      provinces_cities: 'Provinces/Cities',
      phone: 'Phone',
      address: 'Address',
      use_name: 'User name',
      zip: 'Zip',
      email: 'Email',
      remark: 'Audit opinion',
      deny_suc: 'Deny success',
      deny_failure: 'Deny failure',
      allow_suc: 'Allow success',
      allow_failure: 'Allow failure',
      cancelallow_suc: 'Cancel allow success',
      cancelallow_failure: 'Cancel allow failure',
      no_data: 'No data',
      audit_op: 'Audit opinion',
      cancel: 'Cancel',
      confirm_ref: 'Confirm refused',
      confirm_cancelPass: 'Confirm cancel pass',
      input_auditOp: 'Enter your audit opinion',
      space_constraints: 'The length ranges from 1 to 20 characters',
      login_invalid: 'Login is invalid, please login again'
    },
    Node: {
      node_setting: 'Node setting',
      node_statistics: 'Node statistics'
    },
    Carrier: {
      carrier_setting: 'Carrier setting',
      carrier_statistics: 'Carrier statistics'
    },
    Statistics: {
      account_stats: 'Account',
      balances_stats: 'Property',
      lending_stats: 'Lending',
      invest_stats: 'Invest',
      dy_stats: 'Current',
      fixed_stats: 'Fixed',
      node_stats: 'Node',
      sell_stats: 'Deal'
    },
    Setting: {
      applyWaiting: 'Submitting...',
      sure: 'Confirm',
      cancel: 'Cancel',
      fuelCost: 'Gas Fee',
      viewCoupon: 'View coupons',
      submiting: 'Submitting',
      title: ' Account Info',
      empty: 'Account Info can not be found',
      inputPassword: 'Please enter the password.',
      months: 'Month',
      hours: 'h',
      minute: 'm',
      minutes: 's',
      ge: 'entries',
      no: 'Don\'t choose',
      membership: {
        lifetime: 'Lifetime',
        normal: 'Basic',
        merchant: 'Merchant',
        datasource: 'Datasource',
        data_transaction_member: 'Data Transaction Witness'
      },
      basic: {
        title: 'Basic Info',
        more: 'More',
        account_name: 'Account name',
        account_id: 'Account ID',
        membership: 'embership',
        referrer_name: 'Referrer'
      },
      permissions: {
        title: 'Permissions',
        active: 'Active permissions',
        owner: 'Owner permissions',
        threshold: 'Threshold'
      },
      balances: {
        title: 'Account balance',
        asset: 'Assets',
        balance: 'Balance'
      }
    },
    transaction: {
      title: 'Trasanction Info',
      error: 'Error, failed to load trasanction Info',
      empty: 'No record, Possible reason: The transaction information has not yet been recorded to the irreversible block',
      current_block_number: 'Current block',
      trx_type: 'Type',
      trx_op: 'Operation Info',
      trxTypes: {
        'all': 'Show all',
        'transfer': {
          name: 'Transfer',
          from: 'From',
          amount: 'Amount',
          to: 'To',
          fee: 'Fee'
        },
        'limit_order_create': {
          name: 'Place order'
        },
        'limit_order_cancel': {
          name: 'Cancel order'
        },
        'call_order_update': {
          name: 'Update margin'
        },
        'account_create': {
          name: 'Open an account',
          fee: 'Fee',
          registrar: 'Registrant',
          referrer: 'Referrer',
          account: 'Account name'
        },
        'account_update': {
          name: 'Update account',
          fee: 'Fee',
          account: 'Account name'
        },
        'account_whitelist': {
          name: 'Account white list ',
          fee: 'Fee',
          authorizing_account: 'Authorizing account',
          account_to_list: 'Listed account ',
          new_listing: 'Action',
          whitelist_states: {
            no_listing: 'Unlisted',
            white_listed: 'Whitelisted',
            black_listed: 'Blacklisted',
            white_and_black_listed: 'Whitelisted and blacklisted'
          }
        },
        'account_upgrade': {
          name: 'Upgrade account',
          account_to_upgrade: 'Upgrade account',
          fee: 'Fee',
          upgrade_to_lifetime_member: 'Updated to lifetime member'
        },
        'account_transfer': {
          name: 'Transfer account',
          account_id: 'Account id',
          new_owner: 'New owner',
          fee: 'Fee'
        },
        'asset_create': {
          name: 'Create assets',
          fee: 'Fee',
          issuer: 'Issuer',
          symbol: 'Symbol',
          precision: 'Precision',
          max_supply: 'Maximum supply',
          description: 'Description',
          market_fee: 'Market fee',
          maximum_market_fee: 'Maximum market fee'
        },
        'asset_update': {
          name: 'Update asset'
        },
        'asset_update_bitasset': {
          name: 'Update coins'
        },
        'asset_update_feed_producers': {
          name: 'Update assets feed price producer'
        },
        'asset_issue': {
          name: 'Asset issuer',
          fee: 'Fee',
          issuer: 'Issuer',
          asset_to_issue: 'Amount',
          issue_to_account: 'To'
        },
        'asset_reserve': {
          name: 'Reserve assets'
        },
        'asset_fund_fee_pool': {
          name: 'Fund asset fee pool'
        },
        'asset_settle': {
          name: 'Asset settlement'
        },
        'asset_global_settle': {
          name: 'Global asset settlement'
        },
        'asset_publish_feed': {
          name: 'Publish feed price'
        },
        'committee_member_create': {
          name: 'Create committee member'
        },
        'witness_create': {
          name: 'Create witness'
        },
        'witness_withdraw_pay': {
          name: 'Witness rewards withdraw '
        },
        'proposal': {
          proposal_create: 'Create proposal',
          proposal_update: 'Update proposal',
          proposal_delete: 'Delete proposal',
          review_period: 'Review period starts ',
          expiration_time: 'Expiration time',
          proposed_ops: 'Proposal action',
          fee_paying_account: 'Payment account',
          fee: 'Fee',
          update: {
            active_approvals_to_add: 'Active approvals to add',
            active_approvals_to_remove: 'Active approvals to remove ',
            owner_approvals_to_add: 'Owner approvals to add',
            owner_approvals_to_remove: 'Owner approvals to remove',
            key_approvals_to_add: 'Key approvals to add',
            key_approvals_to_remove: 'Key approvals to remove'
          }
        },
        'withdraw_permission_create': {
          name: 'Create withdrawal permission'
        },
        'withdraw_permission_update': {
          name: 'Update withdrawal permission'
        },
        'withdraw_permission_claim': {
          name: 'Claim withdrawal permission'
        },
        'withdraw_permission_delete': {
          name: 'Delete withdrawal permission'
        },
        'fill_order': {
          name: 'Fill order'
        },
        'delegate_update_global_parameters': {
          name: 'Global parameter update'
        },
        'vesting_balance_create': {
          name: 'Create frozen balance'
        },
        'vesting_balance_withdraw': {
          name: 'Withdraw unfrozen balance',
          owner: 'To',
          amount: 'Amount',
          fee: 'Fee'
        },
        'worker_create': {
          name: 'Create worker'
        },
        'custom': {
          name: 'Custom'
        },
        'assert': {
          name: 'Assert operation'
        },
        'balance_claim': {
          name: 'Claim balance'
        },
        'override_transfer': {
          name: 'Override transfer',
          fee: 'Fee',
          issuer: 'Issuer',
          from: 'From',
          to: 'To',
          amount: 'Amount'
        },
        'witness_update': {
          name: 'Update witness'
        },
        'committee_member_update_global_parameters': {
          name: 'Global parameter update'
        },
        'transfer_to_blind': {
          name: 'Transfer to private account'
        },
        'blind_transfer': {
          name: 'Blind transfer'
        },
        'transfer_from_blind': {
          name: 'Transfer from private account'
        },
        'committee_member_update': {
          name: 'Update committee member account'
        },
        'asset_claim_fees': {
          name: 'Claim asset fee '
        },
        'account_upgrade_merchant': {
          name: 'Merchant authentication',
          account_to_upgrade: 'Update account',
          auth_referrer: 'Verification account',
          upgrade_to_merchant_member: 'Verified as merchant',
          fee: 'Fee'
        },
        'account_upgrade_datasource': {
          name: 'DataSource verify',
          account_to_upgrade: 'Update account',
          auth_referrer: 'Authentication account',
          upgrade_to_datasource_member: 'Upgrade to datasource member',
          fee: 'Fee'
        },
        'data_market_category_create': {
          name: 'Create category',
          category_name: 'Category name',
          issuer: 'Issuer',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'data_market_category_update': {
          name: 'Update category',
          category: 'Category ID',
          new_category_name: 'Category name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'free_data_product_create': {
          name: 'Create free market data product',
          product_name: 'Product name',
          issuer: 'Issuer',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'free_data_product_update': {
          name: 'Update free market data product',
          free_data_product: 'Product ID',
          new_product_name: 'New product name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'league_data_product_create': {
          name: 'Create league data product',
          product_name: 'Product name',
          issuer: 'Issuer',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'league_data_product_update': {
          name: 'Update league data product',
          free_data_product: 'Product ID',
          new_product_name: 'New product name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'league_create': {
          name: 'Create league',
          league_name: 'League name',
          fee: 'Fee',
          create_date_time: 'Time'
        },
        'league_update': {
          name: 'Update league',
          league: 'League ID',
          new_league_name: 'New league name',
          new_status: 'New status',
          fee: 'Fee'
        },
        'data_transaction_create': {
          name: 'Data trasanction created',
          request_id: 'Request ID',
          product_id: 'Product name',
          version: 'Version',
          fee: 'Fee',
          requester: 'Requester',
          create_date_time: 'Time'
        },
        'data_transaction_update': {
          name: 'Update data transaction',
          request_id: 'Request ID',
          fee: 'Fee',
          new_requester: 'New requester',
          new_status: 'New status'
        },
        'data_transaction_pay': {
          name: 'Data transaction pay',
          fee: 'Fee',
          from: 'From',
          to: 'To',
          amount: 'Amount',
          request_id: 'Request ID'
        },
        'account_upgrade_data_transaction_member': {
          name: 'Transaction node authentication',
          fee: 'Fee',
          account_to_upgrade: 'Update account',
          upgrade_to_data_transaction_member: 'Authorized as transaction confirmation node'
        },
        'data_transaction_datasource_upload': {
          name: 'Copyright stored',
          request_id: ' Request ID',
          requester: 'Requester',
          datasource: 'Data source',
          fee: 'Fee'
        },
        'data_transaction_datasource_validate_error': {
          name: 'Data transaction fail ',
          request_id: 'Request ID',
          datasource: 'Data source',
          fee: 'Fee'
        },
        'balance_lock': {
          name: 'Frozen balance',
          create_date_time: 'Start time',
          amount: 'Lockup Amount',
          program_id: 'Frozen period',
          term: 'Term',
          interest_rate: 'Annualized Bonus'
        },
        'balance_unlock': {
          name: 'Balance unlock',
          account: 'Unlock account',
          lock_id: 'Lock ID'
        },
        'proxy_transfer': {
          name: 'Proxy transfer',
          from: 'From',
          to: 'To',
          amount: 'Amount',
          memo: 'Memo',
          proxy_memo: 'Proxy memo',
          proxy_account: 'Proxy Account',
          fee: 'Fee'
        },
        'account_property': {
          name: 'Authorized gateway or operator'
        },
        'gateway_withdraw': {
          name: 'Withdraw coins'
        },
        'gateway_deposit': {
          name: 'Deposit'
        },
        'gateway_issue_currency': {
          name: 'Issue coins for gateway'
        },
        'bitlender_option_create': {
          name: 'Create fiat currency parameters'
        },
        'bitlender_option_author': {
          name: 'Create fiat currency committee'
        },
        'bitlender_option_update': {
          name: 'Update fiat currency parameters'
        },
        'bitlender_rate_update': {
          name: 'Update fiat currency interest rate'
        },
        'asset_property': {
          name: 'Authorized assets are fiat currency or collateral crypto currency'
        },
        'bitlender_lend_order': {
          name: 'Create loan order'
        },
        'bitlender_invest': {
          name: 'Investment order'
        },
        'bitlender_repay_interest': {
          name: 'Interest repayment'
        },
        'bitlender_overdue_interest': {
          name: 'Overdue interest repayment'
        },
        'bitlender_repay_principal': {
          name: 'Principal repayment'
        },
        'bitlender_prepayment': {
          name: 'Early principal repayment'
        },
        'bitlender_overdue_repay': {
          name: 'Overdue principal repayment'
        },
        'bitlender_add_collateral': {
          name: 'Add collateral'
        },
        'bitlender_recycle': {
          name: 'Handling Bad Assets'
        },
        'bitlender_remove_operation': {
          name: 'Remove Order'
        },
        'account_coupon': {
          name: 'Gas Coupon'
        },
        'locktoken_create': {
          name: 'create locktoken'
        },
        'locktoken_update': {
          name: 'update locktoken'
        },
        'locktoken_remove': {
          name: 'remove locktoken'
        },
        'locktoken_node': {
          name: 'node award'
        },
        'status_states': {
          0: 'Unpublished',
          1: 'Published',
          2: 'Deleted'
        }
      },
      operation: {
        'pending': ' pending %(blocks)s blocks',
        'no_recent': 'No recent trasanctions',
        'reg_account': '{registrar} registered the account {new_account}',
        'transfer': '{from} from {amount} to {to}',
        'account_create': '{registrar} registered {account}',
        'account_transfer': '{account} transferred {new_account}',
        'proposal_create': '{account} created a proposed transaction',
        'proposal_update': '{account} updated a proposed transaction',
        'proposal_delete': '{account} deleted a proposed transaction',
        'fill_order': '{account} bought {received} at {price}',
        'vesting_balance_withdraw': '{account} withdrew vesting balance of {amount}',
        'balance_claim': '{account} claimed a balance of {amount}',
        'publish_feed': '{account} published feed price of {price}',
        'set_proxy': '{account} set {proxy} as his/her voting proxy',
        'update_account': '{account} updated account Info',
        'limit_order_sell': '{account} placed an order to sell {amount} at {price} ',
        'limit_order_buy': '{account} placed an order to buy {amount} at {price}  ',
        'call_order_update': '{account} changed {debtSymbol} debt by {debt} and collateral by {collateral}',
        'asset_reserve': '{account} reserved {amount}',
        'asset_issue': '{account} issued {amount} to  {to}',
        'asset_create': '{account} created the asset {asset}',
        'asset_update': '{account} updated the asset {asset}',
        'asset_update_bitasset': '{issuer} modified smart asset {currency} parameters',
        'lifetime_upgrade_account': '{account} has been updated to lifetime member',
        'annual_upgrade_account': '{account} has been updated to annual member',
        'unlisted_by': '{lister} removed  {listee} from the list',
        'whitelisted_by': '{lister} whitelisted the account {listee}',
        'account_whitelist': '{lister} updated white list',
        'blacklisted_by': '{lister} blacklisted the account {listee}',
        'limit_order_cancel': '{account} cancelled the order #%(order)s',
        'transfer_account': '{account} ownership transferred to {to}',
        'asset_update_feed_producers': '{account} updated the feed producers for the asset {asset}',
        'asset_fund_fee_pool': '{account} deposited {amount} into {asset} service fee pool ',
        'asset_settle': '{account} requested settlement of {amount}',
        'asset_global_settle': '{account} requested global settlement of {asset} at {price}',
        'witness_create': '{account} is updated to be a witness',
        'witness_update': '{account} updated witness Info',
        'witness_pay': 'withdrew witness revenue to account',
        'witness_receive': 'Received witness from witness',
        'worker_create': '{account} created budget proposal，and requested to pay {pay} daily',
        'committee_member_update_global_parameters': '{account} updated the global committee parameters',
        'override_transfer': '{issuer} sent {amount} from {from} to {to}',
        'account_upgrade_merchant': '{account} was upgraded to merchant',
        'account_upgrade': '{issuer} is updated to premium member',
        'account_upgrade_datasource': '{account} was upgraded to data source',
        'data_market_category_create': '{issuer} created category {category} ',
        'data_market_category_update': '{issuer} passed the proposal and updated the category {category}',
        'free_data_product_create': '{issuer} created free market data product {product}',
        'free_data_product_update': '{issuer} passed the proposal and updated the free market product {product}',
        'league_data_product_create': '{issuer} created league data product {product}',
        'league_data_product_update': '{issuer} passed the proposal and updated the league data product named  {product}',
        'league_create': '{issuer} created league {league}',
        'league_update': '{issuer} passed the proposal and updated the league {league}',
        'data_transaction_create': '{account} published a data trasanction ',
        'data_transaction_update': '{account} updated a data trasanction ',
        'data_transaction_pay': '{from} payed {amount} for data transaction to {to}',
        'account_upgrade_data_transaction_member': '{account} was upgraded to data transaction confirm node',
        'data_transaction_datasource_upload': '{account} confirmed an data upload from {datasource}',
        'data_transaction_datasource_validate_error': '{account} returned an error when processing the data upload',
        'balance_lock': '{account} {account} locked {amount} for loyalty program',
        'balance_unlock': '{account} completed an action of unfreezing balance in loyalty plan',
        'proxy_transfer': '{from} sent {amount} to {to} delegated by {account}',
        'account_property': '{issuer} authorized gateway or operator',
        'gateway_withdraw': '{issuer} withdrew {amount}{currency}',
        'vest_withdraw': '{issuer} unlock {amount} id {id}',
        'gateway_deposit': '{issuer} deposited {amount}{currency}',
        'gateway_issue_currency': '{issuer} issued coins to gateway',
        'bitlender_option_create': '{issuer} created fiat currency parameters',
        'bitlender_option_author': '{issuer} created fiat currency committee',
        'bitlender_option_update': '{issuer} modified fiat currency parameters',
        'bitlender_rate_update': '{issuer} modified fiat currency interest rate ',
        'asset_property': '{issuer} authorized asset as fiat currency or collateral crypto currency',
        'bitlender_lend_order': '{issuer} created loan order {id}',
        'bitlender_invest': '{issuer} invested order {id}',
        'bitlender_repay_interest': '{issuer} paid {n} period interest on time',
        'bitlender_overdue_interest': '{issuer} paid {n} period overdue interest',
        'bitlender_repay_principal': '{issuer} paid principal {id} on time',
        'bitlender_prepayment': '{issuer} repaid {id} in advance',
        'bitlender_overdue_repay': '{issuer} added {n} {currency} to loan order',
        'bitlender_add_collateral': '{issuer} added collateral',
        'bitlender_recycle': '{issuer} Handling Bad Assets {id} ',
        'bitlender_remove_operation': '{issuer} remove loan {id} ',
        'bitlender_setautorepayer_operation': 'automatic repayment account',
        'locktoken_create_operation': '{issuer} create locktoken',
        'locktoken_update_operation': '{issuer} update locktoken  {id}',
        'locktoken_remove_operation': '{issuer} remove locktoken  {id}',
        'locktoken_node_operation': '{issuer} node award  {id}'
      }
    },
    transfer: {
      warn_lock: 'Use forced plaintext encryption',
      title: 'Transfer',
      loading: 'Loading...',
      XZBZ: 'Choose Currency',
      XZMS: 'Lending Mode',
      QXZ: 'Please choose',
      KY: 'Available',
      ZHM: 'To（Please check account name carefully）',
      ZZSL: 'Amount',
      BZ: '    Memo（Optional. The more words added, the more ZOS consumed.）',
      YJXH: 'Estimated consumption',
      YJXH1: 'Subject to the actual amount.',
      KYSL: 'Available',
      ZZBtn: 'Transfer',
      WXTS: 'Tips',
      WXTCNr1: 'Expect for ETH, please do not deposit any other coins to above address, or they can not be retrieved anymore. Please check the address carefully before making the tranfer to others',
      WXTCNr2: 'Contract may fail to execute when you withdraw coins to the contract address, which can fail the transaction and return assets to the platform.Platform will return assets to the original account, which will take a little bit long. Thank you for your understanding.',
      WXTCNr3: 'Network transfer fee is not fixed, depending on the computing power consumed by contract execution during transaction.The gas limit of withdrawing coins is 90000 on this platform. This is used for transferring or executing contract.If the transaction consumes more than 90000 gas, transfer will be not executed and assets will be returned to platform.Platform will return assets to the original account manually.Thank you for your understanding.',
      WXTCNr4: 'In order to keep funds safe, we will review the withdrawal process manually when your security strategy changes, or password was modifed or new withdrawal address is used in your account.Please wait for phone call or email from our staff patiently.',
      WXTCNr5: 'In case the information will be tampered or leaked, please keep your device and browser secure during the process.',
      addAsset: 'Add Asset',
      nullAsset: 'No asset',
      record: 'Record',
      accountNum: 'Received amount',
      about: 'appr.',
      get: 'Earn',
      useCoupons: 'Coupon first',
      couponsNum: 'Coupon amount',
      understandCoupons: 'Learn more about coupons',
      abountCoupons: 'About coupons',
      deduct: 'Coupons can deduct the gas fee for various operations.',
      monthOnce: 'Claim coupons once a month,',
      couponReset: 'Unused coupons will not be cleared at the end of the month.',
      getMethod: 'Earn ZOS through following methods:',
      getMethod1: 'Signing up',
      getMethod2: 'Inviting friends',
      getMethod3: 'Repayment',
      getMethod4: 'Investing',
      getMethod5: 'Transferring ZOS',
      numNull: 'Insufficient amount',
      transferSure: 'Confirmation',
      being: 'verifing',
      from: 'From',
      to: 'To',
      num: 'Amount',
      memo: 'Memo',
      failure: 'Failed to publish transaction',
      timeout: 'Your transaction confirmation timed out, please try again later.',
      addNum: 'Add Crypto Asset',
      addStatutory: 'Add Fiat Asset',
      inputNum: 'Please enter the transfer amount',
      nullNum: 'Insufficient amount, please make the deposit first.',
      unRules: 'The amount is not valid.',
      unZos: 'Insufficient ZOS, please make the deposit first.',
      inputName: 'Please enter your account name',
      inputRight: 'Please enter the correct account name',
      transferOwner: 'It\'s not allowed to make a transfer to your own account.',
      noName: 'This account is not found.',
      noFind: 'This account is not found.',
      selectCurreny: 'Please choose currency',
      transferSucc: 'Transfer successfully!',
      tradeConfirmed: 'The transaction has been confirmed.',
      will: 'will',
      transferTo: 'transfer to',
      gatewayContacts: 'Gateway contact',
      goto: 'go to',
      noGatewayUrl: 'No gateway available, please try again later.'
    },
    information: {
      username: 'User name',
      regName: 'Registrant',
      referees: 'Referrer',
      coupons: 'Coupon',
      get: 'Claimed',
      geted: 'Coupon claimed',
      updatePass: 'Change password',
      currentPw: 'Current password',
      newPw: 'New password',
      copy: 'Copy',
      generated: 'Re-enter generated password',
      backup: 'Private key changes when you reset your password; Please back up your private key.',
      reset: 'Reset',
      phone: 'Phone number',
      getCoupon: 'Claim coupons',
      againInput: 'Re-enter the password',
      notMatch: 'Passwords do not match!',
      inputPhone: 'Please enter phone number',
      selcode: 'Please select country',
      inputCode: 'Please enter the massage verification code',
      resend: 'Resend verification code',
      resendTime: 'Resend',
      send: 'Authentication code',
      sendSucc: 'Sent authentication code successfully, please check on your mobile.',
      sendErr: 'Failed to send the authentication code, please try again later.',
      codeErr: 'phone code error！',
      updatePw: 'Change password',
      updateAsset: 'Change asset password',
      updateSucc: 'Change successfully',
      getSucc: 'Claimed coupon',
      couponsTotal: 'Total coupon amount',
      afterUse: 'Reached the maximum coupon amount. Please use your coupons first.',
      updatePhone: 'Update the mobile number',
      bindSucc: 'Bound successfully',
      bindEnd: 'Mobile number was already bound.',
      bindErr: 'Failed to bind the mobile number.',
      KYC: 'Real name authentication',
      nationality: 'Nationality',
      noBind: 'Mobile phone not bound',
      noBind1: 'if you bind phone ,you will receive message about order state',
      bind: 'Bind phone number',
      bindMail: 'Bind Mail',
      nokyc: 'Unverified',
      review: 'Under review',
      through: 'Already passed',
      nothrough: 'Not passed',
      lookinfo: 'Check your verification information',
      china: 'China',
      uploadPhoto: 'Upload Photo',
      errorPwd: 'Old passward error, please re-enter it.',
      cad: 'Canada',
      ph: 'Philippines',
      sg: 'Singapore',
      mail: 'Email',
      bindEmail: 'Bind Mail',
      sameInput: 'same input',
      reBindEmail: 'reBind Mail'
    },
    page: {
      platform: 'An open platform for smart finance',
      synchronization: 'Blockchain data is out of date, please wait for the data synchronization.',
      latency: 'Network delay',
      latest: 'Latest block',
      connection: 'Connection break',
      connected: 'Connected',
      withdrawal: 'Amount',
      bankCard: 'Bank card',
      selectCard: 'Please choose the bank card.',
      inputWith: 'Please enter the amount.',
      formatNum: 'Invalid amount',
      onlySend: '1. Please don’t deposit any other crypto assets except for',
      only: '',
      through: ' to the above address. Otherwise, you may lose your assets permanently. ',
      loseYou: '2. Depositing to the above address requires confirmations of the entire network. It will arrive after 1 confirmations, and it will be available to withdraw after 6 confirmations. ',
      coinHint1: '3. Min deposit amount: ',
      coinHint2: '. Any deposits less than the minimum will not be credited or refunded.',
      rechargeAddress: '4. Your deposit address won’t change often. For any changes, we will notify you via announcement or email.',
      rechargeSecurity: '5. Please make sure that your computer and browser are secure and your information is protected from being tampered or leaked.',
      minimum: 'Min deposit: xxxCNY.',
      selectAddress: 'Please choose the address.',
      mention: 'Amount',
      validationFail: 'Verification failure',
      guidelines: 'Notice:',
      minimumTopup: 'Min deposit:',
      cny: 'CNY',
      completion: 'After recharge, the amount will be funded to the account within 20 minutes.',
      fees: 'No recharge fee (fee charged by the remitting bank is your own responsibility) ',
      amount: 'Amount',
      way: 'Methods',
      bank: 'Bank card',
      paypal: 'Alipay',
      paypalName: 'Name',
      paypalNum: 'Alipay account name',
      next: 'Next',
      information: 'Deposit information',
      steps: 'Process',
      steps1: 'Step 1: Log in your bank account online, and make the remittance.',
      steps2: 'Step 1: Log in your Aplipay account, and make the remittance.',
      steps3: 'Step 2: Fill in the remittance information as below.',
      payee: 'Beneficiary',
      payeeAccount: 'Beneficiary account No.',
      bankAccount: 'Beneficiary bank name',
      bankPayment: 'Remitter bank name',
      remittance: 'Amount',
      payerAccount: 'Remitter account No.',
      postscript: 'Message',
      steps4: 'Step 3: Please be sure to complete the remittance in accordance with the above requirements, then click "Completed".',
      complete: 'Completed',
      cancel: 'Cancel',
      inputAmount: 'Please enter the amount.',
      amountFormat: 'Format error',
      lessThan: 'The amount cannot be less than 100.',
      fill: 'Please enter the account No.',
      fillColl: 'Invalid account No.',
      name: 'Please enter the cardholder name.',
      nameColl: 'Invalid name',
      reviewing: 'The platform is reviewing your deposit information, please wait with patience.',
      minFull: 'Min deposit:',
      fillAddress: 'Address',
      cancelHine: 'The deposit order was cancelled successfully.',
      rechargeHint1: 'You have an uncompleted deposit order. Please complete it first.',
      rechargeHint2: 'Failed for five times, you cannot go on with the deposit operation any more today.',
      rechargeHint3: 'Please ensure the account name to be same as your real name before you conduct withdrawal',
      orderStatus: 'Status',
      orderTime: 'Remaining time',
      orderPayHint: 'Don\'t  make the payment again.',
      confirm: 'Confirm',
      chargeNotice: 'Tips',
      chargeCopy: 'You can copy and paste the following address at the website',
      chargeOr: 'OR',
      chargeQrCode: 'Scan following QR Code in App'
    },
    member: {
      accountName: 'Account name',
      account_type: 'Account Type',
      annual: 'Annual subscriber',
      basic: 'Basic member',
      expires: 'expires',
      extractable_time: 'Extractable time',
      lifetime: 'Lifetime member',
      no: 'Unknow member'
    },
    set: {
      currentlyNode: 'Current node',
      availableNode: 'Available node',
      connection: 'Connection',
      addNode: 'Add nodes',
      name: 'Name',
      address: 'Address',
      delNode: 'Delete node',
      confirmDel: 'Are you sure to delete?',
      isNode: 'Node',
      inputNode: 'Please enter node address',
      mustNode: 'Node address must start with wss:// or ws://',
      exsit: 'The address is existed, please do not added repeatedly',
      lowLatency: 'Low latency',
      delayIn: 'Middle latency',
      hignDelay: 'High latency',
      unConnect: 'Unable to connect to API node',
      trying: 'Trying to use other online nodes',
      accessPoint: 'Access point',
      faucetAddress: 'Faucet',
      accountInfo: 'Account Info',
      permission: 'Permissions Info',
      bankAdmin: 'Card management',
      faucetUse: 'The faucet address is used to pay the registration fee for new users.',
      faucetUrl: 'URL format incorrect',
      setup: 'General Setting'
    },
    params: {
      title: 'Lending Option',
      locktitle: 'Locktoken Option',
      update: 'Modify',
      assignpayer: 'Payment authorization',
      cancelassignpayer: 'Cancel payment authorization',
      hasassig: 'Have authorized',
      noassig: 'Unauthorized',
      nocarrier: 'Not the carrier',
      errcarrier: 'Carrier is no',
      err_pay_asset: 'Interest rate currencies are no',
      errasset: 'Interest assets is no',
      errpayer: 'The payer does not exist',
      submit: 'Submit',
      name: '',
      nper: 'Period',
      cnper: '',
      updateAfter: 'Modified ',
      restore: 'Restore',
      del: 'Delete',
      borrowParam: 'Loan parameter',
      paramValue: '',
      rate: 'Fee & Allocation',
      operating: 'Operation parameter',
      proposal: 'Create a proposal of modifying parameter',
      review: 'Review period starts',
      proposalContent: 'Proposal content',
      Due: 'Expiry time',
      payAccount: 'Payment account',
      poundage: 'Fee',
      create: 'Create',
      create_dy: 'Create current',
      create_fixed: 'Create fixed',
      create_node: 'Node application',
      updateRate: 'Confirmation',
      updateContent: 'Modified content',
      updateUser: 'Modifier',
      updateTime: 'Time',
      operator: 'Operator',
      loperator: 'Lending Carriers',
      sellpair: 'Transaction pair',
      operatorset: 'Operator Setting',
      gateway: 'Gateway',
      same: 'duplicate',
      stop: 'Stop service',
      rateUser: 'Interest-rate modifier',
      platform: 'Platform',
      minBorrow: 'Min loan',
      minSave: 'Min Save',
      maxSave: 'Max Save',
      lockTime: 'Lock Time',
      rateCollat: 'Rate Collat',
      payer: 'Payer',
      present: 'At Present',
      thanZeroDec: 'a number greater than zero that contains at most two decimal places',
      thanOne: 'An integer not less than one',
      thanNum: 'A positive integer less than 60*60*24*360',
      lessMillion: 'and less than 10 0000 0000',
      errMessage: 'Enter no compound rule',
      errMessage2: 'The maximum deposit must be less than the maximum supply',
      errMessage3: 'Maximum supply must be less than or equal to total circulation',
      minBorrowIn: 'Min loan increment',
      minInvest: 'Min investment',
      minInvestIn: 'Min investment increment',
      maxTime: 'Max loan term',
      timeUnit: 'Loan term unit',
      maxInvest: 'Max tender period',
      maxRate: 'Max loan rate',
      rateVal1: 'Max monthly interest',
      rateVal2: 'Max monthly interest',
      repayNote: 'Payment time reminder (from the due date)',
      riskRate: 'Risk reserve rate',
      serviceRate: 'Service fee rate',
      business: 'Allocation propertion of fees',
      proposed: 'Allocation propertion for referrer',
      operatorAllo: 'Allocation proportion for operator',
      platformAllo: 'Allocation propertion for platform',
      fiatGateway: 'Allocation propertion for fiat-currency gateway',
      debitReference: 'Allocation propertion for borrower\'s referrer',
      creditReference: 'Allocation propertion for lender\'s referrer',
      lateGetting: 'Time period from overdue-payment loan to NPL',
      overdueInterest: 'Penalty rate of overdue interest',
      latePayment: 'Penalty ratio for overdue principal',
      dueBreach: 'Penalty ratio of early principal payment',
      overdue: 'Max overdue period',
      newPeriods: 'Number of new instalments or loan rate cannot be empty.',
      samePeriods: 'with same installments',
      deleteFirst: 'Delete ',
      interestRate: 'Interest Rate',
      the: 'No.',
      proposalsSucc: 'Submitted successfully， please wait for agree',
      dueInterest: 'Daily penalty rate of overdue interests',
      noupdate: 'No modification',
      carrierServiceRate: 'Rate of fiat charged by operator',
      budgetMember: 'Members of Sub-committee',
      investParam: 'Investment parameter',
      paymentParam: 'Payment parameter',
      rateParam: 'Fee parameter',
      carrierServer: 'Allocation proportion of operator service fee',
      platformServer: 'Allocation proportion of platform service fee',
      maxRiskMargin: 'Ceiling limit of risk margin',
      platformServiceRate: 'Rate of platform service fee',
      maxPlatformRate: 'Top limit of platform service fee',
      carrierRate: 'Rate of operator service fee',
      maxCarrierService: 'Top limit of operator service fee',
      carrierServiceLoan: 'Allocation proportion for borrower\'s operator',
      carrierServiceInvest: 'Allocation proportion for investor\'s operator',
      platformServiceLoan: 'Allocation proportion for borrower\'s operator',
      platformServiceInvest: 'Allocation proportion for investor\'s operator',
      loanRefer: 'Allocation proportion for borrower\'s referrer',
      investRefer: 'Allocation proportion for investor\'s referrer',
      platformServicePlatform: 'Allocation proportion for platform',
      platformServiceGateway: 'Allocation proportion for gateway',
      overdueLiquidation: 'Time period from overdue principle to NPL',
      investors: 'Principal guarantee rate for investor',
      once: 'One-time charge based on the overdue interests.',
      oncePro: 'One-time charge based on the amunt of principal.',
      insterest: 'Based on the unpaid interests',
      overRate: 'Calculate by the day based on the overdue interests',
      proOver: 'Deemed to be principle overdue beyond the period',
      chooseMore: 'Multiple choice',
      nopermission: 'You have no authority to modify the parameter.',
      addParams: 'Add parameter',
      confirmPayer: 'Confirm Payer',
      greaterThan: 'Cannot be greater than',
      lessThan: 'Cannot be less than',
      year: 'Year',
      getFeeders: 'Feed Price Producer',
      decimal: 'Enter up to one decimal place.',
      greater: 'The rate must be more than zero.',
      decimalPlaces: 'Enter up to one decimal place, which cannot be zero, cannot exceed',
      Minimum: 'The minimum loan amount shall be a whole number greater than zero, and ',
      isYes: 'is',
      integer: 'the times of',
      thanZero: 'a whole number greater than zero.',
      MinimumThan: 'The minimum loan amount increase should be a whole number greater than zero, and ',
      borrowing: 'the loan term shall be a whole number greater than zero.',
      largest: 'The maximum tender period shall be a whole number greater than zero.',
      biggest: 'The maximum loan rate shall be greater than zero with up to one decimal place.',
      zeroUp: 'greater than zero with up to one decimal place.',
      monthlyInterest: 'The maximum monthly rate shall be a whole number greater than zero.',
      investment: 'The minimum investment amount shall be a whole number greater than zeor, and ',
      investmentIncrease: 'the minimum investment increase should be a whole number greater than zero, and ',
      reminderTime: 'the time of payment reminder shall be a whole number greater than zero.',
      marginRate: 'The risk reserve rate shall be greater than zero, and ',
      digital: 'the upper limit for risk reserve shall be greater than zero.',
      numberGreater: 'A number greater than zero',
      chargeRate: 'The percentage of platform service fee shall be a whole number greater than zero, and ',
      digitalPlatform: 'the upper limit of platform service fee shall be greater than zero, ',
      greaterEqual: 'and shall be a whole number greater than or equal to zero.',
      operatorsCap: 'The upper limit of operator service fee shall be greater than or equal to zero.',
      thanOrEqual: 'a number greater than or equal to zero',
      allocationProportion: 'The allocation percentage for borrowers\' operator shall be a whole number greater than or equal to zero, and the sum of the allocation percentages for borrower\'s operator and invester\'s operator is ',
      sumOf: '100.',
      proportionAs: 'The allocation percentage for investors\' operator shall be a whole number greater than or eqnual to zero, and the sum of the allocation percentages for investor\'s operator and  borrower\'s operator is 100.',
      debitOperator: 'The allocation proportion for borrower\'s operator shall be a whole number greater than zero,and the sum of the allocation proportions for borrower\'s operator and  platform is 100.',
      investorsOperator: 'The proportion of the investor\'s operator allocation shall be greater or equal to 0, and the sum of the platform service fee allocation ratios is 100',
      debitRatio: 'the borrower\'s recommender allocation ratio shall be greater than 0, and the sum of the platform service fee allocation ratios is 100',
      investorReference: 'the investor recommendation ratio should be an integer greater than 0, and the sum of the platform service fee allocation ratio is 100',
      serviceAllocation: ' and the sum of the service fee distribution proportion of the platform is 100',
      moreThan: 'greater than',
      lesThan: 'must less than',
      dinteger: 'whole number',
      fiatGateways: ' the fiat currency gateway allocation ratio should be greater than 0, and the sum of the platform service fee allocation ratio is 100',
      principalOverdue: 'The time of NPL from principal overdue shall be a whole number greater than zero.',
      overdueFines: 'The penalty ratio of overdue interest shall be a whole number greater than zeor.',
      thePrincipal: 'The penalty ratio of overdue principal shall be a whole number greater than zeor.',
      penalty: 'The penalty ratio of prepayment shall be a whole number greater than zeor.',
      onlyEnter: 'Enter up to one decimal place, and it cannot be zero.',
      ShouldBe: 'shall be a whole number greater than zero.',
      already: 'The user is already the rate modifier.',
      noNull: 'Operator cannot be empty.',
      addFeeder: 'Add',
      isFeeder: 'The user is already the feed price producer.',
      invert: 'inver feed',
      feederFlag: 'Feed Price Mode',
      feederProposal: 'Create a proposal for feed price producer.',
      management: 'Parameter management',
      nooptions: 'This asset do not create option',
      index: 'No.',
      account: 'Account name',
      enter: 'Please enter the account name.',
      price: 'feed price',
      data: 'feed price data',
      people: 'Publisher',
      clearing: 'Settlement price',
      handling: 'exchange rate of service fee',
      mortgage: 'Maintain the mortgage rate',
      limit: 'the upper limit for the forced closing',
      witnesses: 'Witness',
      board: 'Committee',
      directors: 'Sub-committee',
      specified: 'Appoint a feed price producer',
      allowedCollate: 'Coin for mortgage',
      carrierAdmin: 'Operator Management',
      addCarrier: 'Add Operator',
      isCarrier: 'The user is not the operator for this currency, please re-enter it.',
      isNull: 'Operator cannot be empty.',
      waring: 'This operation will clear all configurations, please be carefull.',
      inUsername: 'Please enter ',
      inCarrier: 'the name of operator',
      inPayAsset: 'Name of interest asset',
      admin: 'Administration',
      loanCarrier: 'Borrower Operator',
      investCarrier: 'Investor\'s Operator',
      unConfig: 'config is corrupted, please reset the whole config (',
      ratioNull: 'Min value-to-loan ratio cannot be empty.',
      ratioNumber: 'Min value-to-loan ratio shall be a number.',
      isFeed: 'current feed price is ',
      chooseOne: 'Please choose a cryptocurrency for collateral at least.',
      currentUser: 'The current user is not',
      chooseCarrier: 'Choose an operator',
      credibility: 'Credibility',
      recovery: 'Collateral recovery',
      taste: 'Compensation fiat',
      noAllowed: 'No mortgagable coin is set',
      chooseGateway: 'Please select gateway',
      chooseAuthor: 'Please select the certifier',
      theme: 'Theme',
      chooseTheme: 'Select Theme',
      carrierCount: 'Lending Carrier Statistics',
      author: 'Author',
      valiRatio: 'Please enter a number between 0 and 100',
      noGateway: 'No gateway',
      noAuthor: 'No author'
    },
    investDetails: {
      touBXXQR: 'Tips:',
      WXTS: 'Please check the loan information carefully. Click "Invest" means you confirmed the investment amount, and it\'s not possible to withdraw the investment.',
      WXTSNEXT: 'The price of collateral will be monitored by the platform all the time. The loss caused by the fluctuation of cryptocurrency will be shared by both platform and investors.',
      JKYH: 'Borrower',
      KYC: 'Authors',
      DQJD: 'Progress',
      SYKTJE: 'Available Balance',
      sYTBSJ: 'Remaining Time',
      QECN: 'All funds will be returned if the loan does not reach the full amount in the tender period.',
      diyawu: 'Collateral',
      diyaBILI: 'Risk Reserve Ratio',
      DYWDQJZ: 'Current Collateral Value',
      TBJE: 'Investment Amount',
      TBJEPlacholder: 'Please enter investment amount',
      minTZJE: 'Min investment',
      MinDZ: 'Increment by 100',
      KYYE: 'Available balance',
      YJSY: 'Estimated Profit',
      maybeSS: 'Potential loss',
      Topup: 'Deposit',
      LJFX: 'Learn more about risk',
      JKHT: 'Loan Contract',
      HTMB: 'Contract Template',
      checkQR: 'I have already confirmed my investment, and am willing to take the risk.',
      buttoQR: 'Invest',
      BXX: 'Alternatives',
      CKYHDetail: 'View user\'s credit and loan history Info',
      userName: 'Account name',
      JF: ' Points',
      ZOSBIT: 'ZOS coin',
      GJ: 'Nationality',
      ZCSJ: 'Registration time',
      proportion: '',
      exchange: 'to',
      inputPass: 'Please enter password',
      investConfirm: 'Confirmation',
      contract: 'Contract',
      contractDetail: 'Contract details',
      lookInvest: 'View Detail'
    },
    permission: {
      masterKey: 'Owner Key',
      ownerKey: 'Owner Key is the highest permission of account, it\'s used to overwrite other permissions. ',
      publicKey: 'Public key',
      noEncKey: 'Special plaintext public key',
      privateKeyShow: 'Check',
      privateKeyHidden: 'Hide private key',
      privateKey: 'Private Key',
      assetKey: 'Active Key',
      activeKey: 'Active Key can control transfer and manage memo permissions.',
      momeKey: 'Memo Key',
      memoKey: 'The memo information attached to the transaction is transmitted after encrypted by public memo key, and only a corresponding private key of the public key can decrypt it. ',
      authKey: 'Info Key',
      authorKey: 'The user information encrypted by public info key, and only a corresponding private key of the public key can decrypt it. '
    }
  }
}
